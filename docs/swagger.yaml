definitions:
  cart.CartItemRequest:
    properties:
      product_id:
        type: integer
      quantity:
        minimum: 1
        type: integer
    required:
    - product_id
    - quantity
    type: object
  cart.CreateRequest:
    properties:
      cart_items:
        items:
          $ref: '#/definitions/cart.CartItemRequest'
        type: array
    type: object
  cart.PromotionRequest:
    properties:
      promotion_code:
        type: string
    required:
    - promotion_code
    type: object
  cart.UpdateRequest:
    properties:
      cart_items:
        items:
          $ref: '#/definitions/cart.CartItemRequest'
        type: array
    type: object
  fiber.Map:
    additionalProperties: true
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Cart:
    properties:
      cart_items:
        items:
          $ref: '#/definitions/models.CartItem'
        type: array
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      discount:
        description: ผลรวมของ Promotion.Discount ของแต่ละ Product
        type: number
      id:
        type: integer
      promotion:
        $ref: '#/definitions/models.Promotion'
      promotion_id:
        type: integer
      sub_total:
        description: รวม CartItem.Price ของ CartItem
        type: number
      total:
        description: รวมทั้งหมด (หลังหักส่วนลด)
        type: number
      updatedAt:
        type: string
      user_id:
        type: integer
    type: object
  models.CartItem:
    properties:
      cart:
        $ref: '#/definitions/models.Cart'
      cart_id:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      price:
        description: ราคาสินค้า Product.Price
        type: number
      product:
        $ref: '#/definitions/models.Product'
      product_id:
        type: integer
      quantity:
        type: integer
      total_price:
        type: number
      updatedAt:
        type: string
    type: object
  models.Product:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      updatedAt:
        type: string
    type: object
  models.Promotion:
    properties:
      code:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      discount:
        type: number
      id:
        type: integer
      product:
        $ref: '#/definitions/models.Product'
      product_id:
        type: integer
      updatedAt:
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      address_details:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      id_card:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  product.CreateRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  product.UpdateRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  promotion.CreateRequest:
    properties:
      code:
        type: string
      discount:
        type: number
      product_id:
        type: integer
    required:
    - code
    - discount
    type: object
  promotion.Request:
    properties:
      code:
        type: string
      discount:
        type: number
      product_id:
        type: integer
    required:
    - code
    - discount
    type: object
  user.CreateRequest:
    properties:
      address:
        type: string
      address_details:
        type: string
      email:
        type: string
      first_name:
        type: string
      id_card:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  user.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /cart:
    get:
      consumes:
      - application/json
      description: Get all cart items
      produces:
      - application/json
      responses:
        "200":
          description: Cart
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all cart items
      tags:
      - cart
    post:
      consumes:
      - application/json
      description: Create a Cart
      parameters:
      - description: Cart  request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cart.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a Cart
      tags:
      - cart
    put:
      consumes:
      - application/json
      description: Update a Cart
      parameters:
      - description: Cart Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cart.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a Cart
      tags:
      - cart
  /cart/item/{product_id}:
    delete:
      consumes:
      - application/json
      description: Delete
      parameters:
      - description: Product ID to remove
        in: path
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Updated cart details
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Remove an item from the cart
      tags:
      - cart
  /cart/promotion:
    post:
      consumes:
      - application/json
      description: Apply a promotion code
      parameters:
      - description: Promotion code request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/cart.PromotionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Apply promotion
      tags:
      - cart
  /me:
    get:
      consumes:
      - application/json
      description: Get User Profile
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get User Information
      tags:
      - user
  /products:
    get:
      consumes:
      - application/json
      description: Get all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all products
      tags:
      - product
    post:
      consumes:
      - application/json
      description: Create a product
      parameters:
      - description: Product
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/product.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a product
      tags:
      - product
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Soft delete a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a product
      tags:
      - product
    get:
      consumes:
      - application/json
      description: Get product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get product by id
      tags:
      - product
    put:
      consumes:
      - application/json
      description: update a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/product.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: update a product
      tags:
      - product
  /promotions:
    get:
      consumes:
      - application/json
      description: Get all Promotions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Promotion'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all Promotions
      tags:
      - promotion
    post:
      consumes:
      - application/json
      description: Create a promotion
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/promotion.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Promotion'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a promotion
      tags:
      - promotion
  /promotions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a promotion by ID
      parameters:
      - description: Promotion ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a promotion
      tags:
      - promotion
    get:
      consumes:
      - application/json
      description: Get promotion by id
      parameters:
      - description: promotion ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get promotion by id
      tags:
      - promotion
    put:
      consumes:
      - application/json
      description: update a promotion
      parameters:
      - description: Promotion ID
        in: path
        name: id
        required: true
        type: integer
      - description: request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/promotion.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Promotion'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: update a promotion
      tags:
      - promotion
  /users/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with email and password
      parameters:
      - description: Login Data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login
      tags:
      - user
  /users/register:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: User Registration Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.CreateRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
